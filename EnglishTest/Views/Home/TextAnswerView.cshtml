@model TextAnswer

@{
    var style = "";
    if  (Model.IsRight())
    {
        style = "background-color:#D3FFD2";
    }
    else
    {
        style = "background-color:#FFD2D2";
    }
    var styleWrongAnswer = new string[Model.UserAnswer.Length];
    for (var i = 0; i < Model.Text.Length - 1; i++)
    {
        if (!Model.AnswersRightness[i])
        {
            styleWrongAnswer[i] = "background:#FF9797;";
        }
        else
        {
            styleWrongAnswer[i] = style;
        }
    }
}
<task class="color-task-conteiner-texts" style=@style>
    <task class="task-container-text">
        <task class="description-texts">
            Click in the gaps and type one word in each gap.
        </task>
        <task class="text-task" style="padding-bottom: 26px;">
            @for (var i = 0; i < Model.Text.Length - 1; i++)
            {
                @Model.Text[i]
                if (Model.AnswersRightness[i])
                {
                    @Html.TextBox("userAnswer", (string)ViewBag.Answer?[i], new { @style = styleWrongAnswer[i], @disabled = true })
                }
                else
                {
                    if ((string)ViewBag.Answer?[i].Trim() == "")
                    {
                        @Html.TextBox("userAnswer", String.Format("({0})", Model.RightAnswer[i]), new { @style = styleWrongAnswer[i] + "font-weight: bold;", @disabled = true })
                    }
                    else
                    {
                        var lenUserAnswer = Math.Max(((string)ViewBag.Answer?[i]).Length, 98);
                        var lenCorrectAnswer = Math.Max(Model.RightAnswer[i].Length + 2, 98);
                        @Html.TextBox("userAnswer", (string)ViewBag.Answer?[i], new { @style = styleWrongAnswer[i] + "text-align:right;" + String.Format("width:{0}px", lenUserAnswer), @disabled = true })
                        @Html.TextBox("userAnswer", String.Format("({0})", Model.RightAnswer[i]), new { @style = styleWrongAnswer[i] + "font-weight:bold;text-align:left;"  + String.Format("width:{0}px", lenCorrectAnswer), @disabled = true })


                    }
                }
                @*var answer = (string)ViewBag.Answer?[i];
            if (!Model.AnswersRightness[i])
            {
                answer += String.Format(" ({0})", Model.RightAnswer[i]);
            }
            @Model.Text[i]
            @Html.TextBox("userAnswer", answer, new { @style = @styleWrongAnswer[i], @disabled = true })*@

            }
            @Model.Text[Model.Text.Length - 1]
        </task>
        @if (!Model.IsRight())
        {
            <task class="answers-texts" style="padding-top: 0px; padding-bottom: 80px;">
                Правильные ответы:
                @for (var i = 0; i < Model.RightAnswer.Length; i++)
                {
                     <task class="answers-texts" style="padding-left: 20px">
                        @String.Format("{0}. {1}    ", i + 1, Model.RightAnswer[i])
                     </task>
                }
            </task>
        }
        else
        {
            <task class="description-texts" style="padding-top: 0px; padding-bottom: 103px;">
            </task>
        }
        @if (ViewBag.TaskNumber < ViewBag.TotalNumber && !ViewBag.IsTrainingFinish)
        {
            <a href="~/Home/ShowNextTask">
                <input type="submit" style="margin-bottom: 62px;" value="Следующее задание" />
            </a>
        }
        else
        {
            <a href="~/Home/ShowResults">
                <input type="submit" style="margin-bottom: 62px;" value="Узнать результаты">
            </a>
        }
    </task>
</task>